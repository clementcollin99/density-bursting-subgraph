@techreport{10.5555/894477,
author = {Goldberg, A. V.},
title = {Finding a Maximum Density Subgraph},
year = {1984},
publisher = {University of California at Berkeley},
address = {USA},
abstract = {(none)}
}

@InProceedings{10.1007/978-3-540-39658-1_15,
author="Chung, Kai-min
and Lu, Hsueh-I",
editor="Di Battista, Giuseppe
and Zwick, Uri",
title="An Optimal Algorithm for the Maximum-Density Segment Problem",
booktitle="Algorithms - ESA 2003",
year="2003",
publisher="Springer Berlin Heidelberg",
address="Berlin, Heidelberg",
pages="136--147",
abstract="We address a fundamental string problem arising from analysis of biomolecular sequences. The input consists of two integers L and U and a sequence S of n number pairs (ai,wi) with wi{\thinspace}>{\thinspace}0. Let segmentS(i,j) of S be the consecutive subsequence of S starting index i to index j. The density of S(i,j) is d(i,j){\thinspace}={\thinspace}(ai{\thinspace}+{\thinspace}ai{\thinspace}+{\thinspace}1{\thinspace}+{\thinspace}...{\thinspace}+{\thinspace}aj)/(wi{\thinspace}+{\thinspace}wi{\thinspace}+{\thinspace}1{\thinspace}+{\thinspace}...{\thinspace}+{\thinspace}wj). The maximum-density segment problem is to find a maximum-density segment over all segments of S with L{\thinspace}≤{\thinspace}wi{\thinspace}+{\thinspace}wi{\thinspace}+{\thinspace}1{\thinspace}+{\thinspace}...{\thinspace}+{\thinspace}wj{\thinspace}≤{\thinspace}U. The best previously known algorithm for the problem, due to Goldwasser, Kao, and Lu, runs in O(n log(U{\thinspace}−{\thinspace}L{\thinspace}+{\thinspace}1)) time. In the present paper, we solve the problem in O(n) time. Our approach bypasses the complicated right-skew decomposition, introduced by Lin, Jiang, and Chao. As a result, our algorithm has the capability to process the input sequence in an online manner, which is an important feature for dealing with genome-scale sequences. Moreover, for an input sequence S representable in O(k) space, we also show how to exploit the sparsity of S and solve the maximum-density segment problem for S in O(k) time.",
isbn="978-3-540-39658-1"
}